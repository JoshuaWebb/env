SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# using regular git branch prompt makes this prompt really slow.
source "$SCRIPT_DIR/gitbranchfast"

# Default function does nothing
# $1 = the root path of the repo
# Output how you want the repo to be displayed in the prompt
# If you don't want a special output, don't output anything.
specialRepo()
{
   : # default behaviour is to not do anything.
   
   # example:
   # case "$1" in
   # "/c/exmaple")              echo "${Orange}Example"  ;;
   # "/c/some/other/example/")  echo "${Pink}Example2"   ;;
   # esac
}

# source the file overriding the function if it exists
[ -f "$SCRIPT_DIR/repositories" ] && source "$SCRIPT_DIR/repositories"

# Various variables you might want for your PS1 prompt instead
Time12h="\T"
Time12a="\@"
PathShort="\w"
PathFull="\W"
NewLine="\n"
Jobs="\j"

prompt_cmd()
{
   PS1="${PDarkGrey}$Time12h${PColor_Off} "
   # setup GITBRANCH environment variable
   gitbranchfast
   # if in a git repo, show the path and the branch (highlight the root repo directory)
   if [[ ! -z ${GITBRANCH} ]]; then
     # Only do all this stuff if the directory has changed
     if [[ "$PWD" != "$CACHED_COLOURED_PATH" ]]; then    
        prefix=$(git rev-parse --show-prefix)
        prefix=${prefix:-.} # need at least one character to chop
        # we want a leading '/' (but not the trailing slash from "show-prefix")
        # after we cut up $PWD we'll fix $justTrailing if this makes it '/'
        justTrailing="/"${prefix:0:-1}
        parentAndRepo=${PWD%%$justTrailing}
        justRepo=${parentAndRepo##*/}
        properParentPath=${parentAndRepo%%$justRepo}

        # remove the leading '/' if it is the only char, otherwise grab everything.
        justTrailing=${justTrailing%%/}

        properParentPath=${properParentPath/$HOME"/"/"~/"}

        # custom presentation logic for root path
        local colourRepo=$(specialRepo "${properParentPath}${justRepo}");

        # if no special case
        if [[ -z ${colourRepo} ]]; then
           colourRepo=${properParentPath}${PPink}${justRepo}
        fi

        colouredPath=${PColor_Off}${colourRepo}${PColor_Off}${justTrailing}

        export COLOURED_PATH=$colouredPath
     fi
     
     export CACHED_COLOURED_PATH=$PWD
     # finally we add the branch '__git_ps1' wrapped in curly braces (all blue)
     # and finish with an uncoloured "$ "
     PS1+="${PBBlue}$(__git_ps1 "{%s}") ${COLOURED_PATH}${PColor_Off}\$ "
     
   # if not in a git repo, just the path
   else
     PS1+="${PPurple}$PathShort${PColor_Off}\$ ";
   fi
}

# PROMPT_COMMAND gets executed before every prompt.
export PROMPT_COMMAND=prompt_cmd
