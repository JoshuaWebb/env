#!/usr/bin/env bash

# git checkout force
# - checkout the most recent version of a remote branch
#   discarding all changes to the working directory.
#   and discarding all commits
gcof()
{
  if [ $# -eq 0 ]
   then
      echo "No commit/branch supplied... what am I supposed to checkout?";
      return 1
   fi

   remote="origin" # hardcoded to origin right now: TODO: take a -r flag
   branch=$1;

   echo "fetching remote" &&
   git fetch $remote &&

   echo "" &&
   gbe $remote/$branch &&

   echo "" &&
   gnuke &&

   echo "" &&
   git checkout $branch &&

   local stat=$(git status -sb | head -1) &&
   local aheadBy=$(echo $stat | sed -nr 's/.*(\[ahead ([0-9]+).*\])$/\2/p') &&

   if [[ $aheadBy -ne "" ]];
   then
      echo ""

      # local handler
      tld="$(gtld)";
      handler="$tld/.git/hooks/gcof-handler";
      handlerApplies="$tld/.git/hooks/gcof-handler-applies";

      [[ -e $handler ]] && [[ -e $handlerApplies ]] &&
      "$handlerApplies" $aheadBy "$remote" "$branch" &&
      {
          "$handler" $aheadBy "$remote" "$branch";
          return $?;
      }

      # global handler
      {
         # delete cached paths in case they no longer exist
         hash -d gcof-handler
         hash -d gcof-handler-applies
         command -v gcof-handler &&
         command -v gcof-handler-applies
      # silence output from checks
      } > /dev/null 2>&1 &&
      gcof-handler-applies $aheadBy "$remote" "$branch" &&
      {
          gcof-handler $aheadBy "$remote" "$branch";
          return $?;
      }

      # Otherwise no handler
      local prompt
      [[ $aheadBy -eq 1 ]] &&
         prompt="You have an un-pushed commit, do you want to kill it? " ||
         prompt="You have $aheadBy un-pushed commits, do you want to blast them away? ";

      local RESPONSE=""
      while [[ "$RESPONSE" = "" ]];
      do
         echo -n "$prompt" &&
         read RESPONSE
      done

      echo "" &&
      if yslashn "$RESPONSE"; then
        echo "Bye bye changes!"
      else
        echo "Left'm there.";
        return 0
      fi
   fi

   echo "" &&
   git reset --hard $remote/$branch
}

# enable autocomplete
__git_complete gcof _git_checkout
